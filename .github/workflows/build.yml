name: build and deploy signal
on:
  push:
    pull_request:
      branches:
        - main
        - master
    tags:
      - '*'
        #branches:
        #  - main
        #  - master
        #  - testing
  workflow_dispatch:
    inputs:
      arch:
        type: choice
        description: Architecture
        options:
        - both
        - x86_64
        - aarch64
jobs:
  pre-run:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-24.04
    name: workflow_dispatch pre-run info
    steps:
      - name: workflow_dispatch pre-run info
        run: |
          echo "event name ${{ github.event_name }}"
          echo "arch ${{ github.event.inputs.arch }}"
          echo "logic aarch64: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'aarch64' ) ) }}"
          echo "logic x86_64: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'x86_64' ) ) }}"


  a-publish-release:
    if: startsWith(github.ref, 'refs/tags/')
    #runs-on: self-hosted
    runs-on: ubuntu-24.04
    name: '1 publish release'
    steps:
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          draft: false
          prerelease: false
          name: ${{ github.ref }}
          tag: ${{ github.ref }}

  # build arm64 dir on an arm64 runner, then upload it for use in the flatpak section
  b-build-dir-arm64:
    #runs-on: self-hosted
    runs-on: ubuntu-24.04-arm
    name: 'build dir arm64'
    steps:
      - name: Set env.BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: install secrets
        shell: bash
        env:
          GPG_KEY: ${{secrets.GPG_KEY}}
        run: |
          sudo apt-get update
          sudo apt-get install -qq -y gpg openssh-client
          echo "$GPG_KEY" | gpg --import
      - name: checkout code
        uses: actions/checkout@v4
      - name: build arm64 dir
        shell: bash
        env:
          VERSION: "7.62.0"
          build_aarch64: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'aarch64' ) ) }}
        run: |
          # arm64
          set -x
          if [[ "$build_aarch64" == "true" ]];then
            sudo apt-get update && sudo apt-get install -qq -y bash rsync elfutils coreutils slirp4netns rootlesskit binfmt-support fuse-overlayfs qemu-user-static podman
            echo "build aarch64"
            echo "Version is: $VERSION"
            bash ci-build.sh arm64
            podman stop signal-desktop-$VERSION
            podman rm signal-desktop-$VERSION
            mv ~/Signal-Desktop_arm64 Signal-Desktop_arm64
            tar czf builddir-arm64.tar.gz Signal-Desktop_arm64
          fi
      - name: Upload arm64 dir
        if: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'aarch64' ) ) }}
        uses: actions/upload-artifact@v4
        with:
          path: builddir-arm64.tar.gz
          name: builddir-arm64

  b-build-dir-amd64:
    #runs-on: self-hosted
    runs-on: ubuntu-24.04
    name: 'build dir x86_64'
    steps:
      - name: Set env.BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: install secrets
        shell: bash
        env:
          GPG_KEY: ${{secrets.GPG_KEY}}
        run: |
          sudo apt-get update
          sudo apt-get install -qq -y gpg openssh-client
          echo "$GPG_KEY" | gpg --import
      - name: checkout code
        uses: actions/checkout@v4
      - name: build x86_64 dir
        shell: bash
        env:
          VERSION: "7.62.0"
          build_x86_64: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'x86_64' ) ) }}
        run: |
          # arm64
          set -x
          if [[ "$build_x86_64" == "true" ]];then
            sudo apt-get update && sudo apt-get install -qq -y bash rsync elfutils coreutils slirp4netns rootlesskit binfmt-support fuse-overlayfs qemu-user-static podman
            echo "build x86_64"
            echo "Version is: $VERSION"
            bash ci-build.sh amd64
            podman stop signal-desktop-$VERSION
            podman rm signal-desktop-$VERSION
            mv ~/Signal-Desktop_amd64 Signal-Desktop_amd64
            tar czf builddir-amd64.tar.gz Signal-Desktop_amd64
          fi
      - name: Upload x86_64 dir
        if: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'x86_64' ) ) }}
        uses: actions/upload-artifact@v4
        with:
          path: builddir-amd64.tar.gz
          name: builddir-amd64

  b-build-flatpaks:
    #runs-on: self-hosted
    runs-on: ubuntu-24.04
    name: 'build flatpaks'
    needs:
      - b-build-dir-arm64
      - b-build-dir-amd64
    steps:
      - name: Set env.BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: install secrets
        shell: bash
        env:
          GPG_KEY: ${{secrets.GPG_KEY}}
        run: |
          sudo apt-get update
          sudo apt-get install -qq -y gpg openssh-client
          echo "$GPG_KEY" | gpg --import
      - name: checkout code
        uses: actions/checkout@v4
      - name: Download arm64 artifacts
        if: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'aarch64' ) ) }}
        uses: actions/download-artifact@v4
        with:
          path: /tmp/
          name: builddir-arm64
      - name: Download x86_64 artifacts
        if: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'x86_64' ) ) }}
        uses: actions/download-artifact@v4
        with:
          path: /tmp/
          name: builddir-amd64
      - name: install system package deps
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -qq -y bash rsync flatpak elfutils coreutils slirp4netns rootlesskit binfmt-support fuse-overlayfs flatpak-builder qemu-user-static unzip
      - name: extract artifact downloads
        shell: bash
        env:
          VERSION: "7.62.0"
          build_x86_64: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'x86_64' ) ) }}
          build_aarch64: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'aarch64' ) ) }}
        run: |
          # amd64
          set -x
          if [[ "$build_x86_64" == "true" ]];then
            tar xzf /tmp/builddir-amd64.tar.gz
            ls -alh Signal-Desktop_amd64
          fi
          # arm64
          set -x
          if [[ "$build_aarch64" == "true" ]];then
            tar xzf /tmp/builddir-arm64.tar.gz
            ls -alh Signal-Desktop_arm64
          fi
      - name: install flatpak deps
        shell: bash
        env:
          CI_USER: runner
        run: |
          sudo rm -rf /opt/pakrepo/
          sudo mkdir -p /opt/pakrepo
          sudo chown "$USER" /opt/pakrepo
          sudo flatpak update --noninteractive -y
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install --noninteractive --arch=aarch64 flathub org.electronjs.Electron2.BaseApp//24.08 org.freedesktop.Platform//24.08 org.freedesktop.Sdk//24.08 -y
          sudo flatpak install --noninteractive --arch=x86_64 flathub org.electronjs.Electron2.BaseApp//24.08 org.freedesktop.Platform//24.08 org.freedesktop.Sdk//24.08 -y
      - name: build flatpaks
        shell: bash
        env:
          build_x86_64: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'x86_64' ) ) }}
          build_aarch64: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'aarch64' ) ) }}
        run: |
          # amd64
          if [[ "$build_x86_64" == "true" ]];then
            flatpak-builder --arch=x86_64 --gpg-sign=FBEF43DC8C6BE9A7 --repo=/opt/pakrepo --force-clean .builddir flatpak.yml
            flatpak build-bundle --arch=x86_64 /opt/pakrepo ./signal_amd64.flatpak org.signal.Signal master
            sha256sum ./signal_amd64.flatpak | tee -a checksums.txt
          fi
          # arm64
          if [[ "$build_aarch64" == "true" ]];then
            flatpak-builder --arch=aarch64 --gpg-sign=FBEF43DC8C6BE9A7 --repo=/opt/pakrepo --force-clean .builddir flatpak.yml
            flatpak build-bundle --arch=aarch64 /opt/pakrepo ./signal_arm64.flatpak org.signal.Signal master
            sha256sum ./signal_arm64.flatpak | tee -a checksums.txt
          fi
      - name: Upload checksums.txt
        uses: actions/upload-artifact@v4
        with:
          path: checksums.txt
          name: checksums.txt
      - name: Upload amd64 flatpak
        if: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'x86_64' ) ) }}
        uses: actions/upload-artifact@v4
        with:
          path: signal_amd64.flatpak
          name: signal_amd64.flatpak
      - name: Upload arm64 flatpak
        if: ${{ github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && ( github.event.inputs.arch == 'both' || github.event.inputs.arch == 'aarch64' ) ) }}
        uses: actions/upload-artifact@v4
        with:
          path: signal_arm64.flatpak
          name: signal_arm64.flatpak

      # Publish
      - name: Upload release artifacts
        if: startsWith(github.ref, 'refs/tags/')
        env:
          VERSION: "7.62.0"
        uses: AButler/upload-release-assets@v3.0
        with:
          release-tag: ${{ env.VERSION }}
          files: "signal_amd64.flatpak;signal_arm64.flatpak;checksums.txt"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: checkout gh-pages branch
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/checkout@v4
        with:
          ref: 3bfa32a90c7bdd769a0e2235f66bd1aec0310ec3
      - name: sync to gh-pages branch repo dir and commit
        if: startsWith(github.ref, 'refs/tags/')
        env:
          VERSION: "7.62.0"
        shell: bash
        run: |
          rsync -a --delete /opt/pakrepo/ ./repo/
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git add repo
          git commit -m "repo update for $VERSION"
          git push -f origin HEAD:gh-pages
